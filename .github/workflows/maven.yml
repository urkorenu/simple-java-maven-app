# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven

    # - name: Dependency Review
    #   uses: actions/dependency-review-action@v2
    #   with:
    #     fail-on-severity: critical
    #     allow-licenses: MIT, Apache-2.0, ISC, BSD-2-Clause, 0BSD, NOASSERTION
    #     base-ref: ${{ github.event.pull_request.base.sha || 'main' }}
    #     head-ref: ${{ github.event.pull_request.head.sha || github.ref }}
        
    - name: Bump version
      id: bump
      uses: mickem/gh-action-bump-maven-version@1.0.0

    - name: login to docker hub
      id: docker-hub
      env:
        username: ${{secrets.DOCKERHUB_USERNAME}}
        password: ${{secrets.DOCKERHUB_PASSWORD}}
      run: |
        docker login -u $username -p $password 

    - name: Scan Docker image 🐳
      uses: snyk/actions/docker@master
      continue-on-error: true
      with:
        image: ${{secrets.DOCKERHUB_USERNAME}}/simple-java:latest
        args: --file=dockerfile --severity-threshold=high --sarif-file-output=snyk.sarif
      env:
        SNYK_TOKEN: ${{ secrets.SNYC_CONTAINER_SCAN }}
        
    - name: build the docker image
      id: build-docker-image
      run: |
        ls -la 
        docker build . -f Dockerfile -t urkoren/simple-java:latest



    # - name: push the docker image
    #   id: push-docker-image
    #   run: docker push ${{secrets.DOCKERHUB_USERNAME}}/simple-java:latest

    # - name: install ssh keys
    #   run: |
    #     install -m 600 -D /dev/null ~/.ssh/id_rsa
    #     echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
    #     ssh-keyscan -H ${{ secrets.SSH_HOST }} > ~/.ssh/known_hosts
    # - name: connect and pull
    #   run: ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "docker run urkoren/simple-java:latest && exit"
    # - name: cleanup
    #   run: rm -rf ~/.ssh

